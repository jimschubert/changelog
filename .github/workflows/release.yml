name: Go Build
on:
  push:
    branches:
      - 'master'
      - 'releases/v*'
    tags:
      - 'v*'
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          # Version here has to match one returned via https://golang.org/dl/?mode=json&include=all
          go-version: '1.14'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Unshallow
        if: success() && startsWith(github.ref, 'refs/tags/v')
        run: git fetch --prune --unshallow

      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build and Test
        run: go test -v -race -cover ./...

  Docker-Image:
    runs-on: ubuntu-latest
    needs: build
    name: Docker Build, Tag, Push

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Docker Login
        if: success()
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2.4.1
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          version: latest
          args: release --rm-dist

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
